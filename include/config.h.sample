// For mono-stable buttons it will trigger state: LOW - when button is pressed, HIGH - when button is released
const uint8_t MONO_STABLE_TRIGGER = LOW;

// time interval for RELAY_IMPULSE type relay, ignored when button type is DING_DONG or REED_SWITCH
const unsigned long RELAY_IMPULSE_INTERVAL = 250;

// debounce interval in milliseconds
const unsigned long BUTTON_DEBOUNCE_INTERVAL = 50;

// double-click interval in milliseconds
const unsigned long BUTTON_DOUBLE_CLICK_INTERVAL = 350;

// long-press interval in milliseconds
const unsigned long BUTTON_LONG_PRESS_INTERVAL = 800;

#ifdef USE_EXPANDER
  const uint8_t gExpanderAddresses[] = {0x20};
#endif

const char MULTI_RELAY_DESCRIPTION[] PROGMEM = "Multi Relay";

// Relays config - ID and PIN MUST BE UNIQUE (can't be repeated)!
// Row params: relay ID - [0-254] sensor ID reported on MySensor Gateway
//             relay pin - pin used for relay, can be expander pin via "E(x, y)" macro
//             relay options - [RELAY_TRIGGER_LOW|RELAY_TRIGGER_HIGH] {RELAY_STARTUP_ON|RELAY_STARTUP_OFF} {RELAY_IMPULSE}
//             relay dependOn - ID of relay that needs to be turned on before this one
//             relay description - reported on MySensor Gateway, can help identify device on initial configuration in Home Automation App, max. 30 chars, can be empty ("")
const RelayConfigDef gRelayConfig[] PROGMEM = {
  {1, 2, RELAY_TRIGGER_LOW, -1, "RELAY 1"},
  {2, 3, RELAY_TRIGGER_LOW, -1, "RELAY 2"},
  {3, 4, RELAY_TRIGGER_LOW, -1, "RELAY 3"},
  {4, 5, RELAY_TRIGGER_LOW, -1, "RELAY 4"},
  {5, 6, RELAY_TRIGGER_LOW, -1, "RELAY 5"},
  {6, 7, RELAY_TRIGGER_LOW | RELAY_STARTUP_OFF, -1, "RELAY 6"},
  {7, 8, RELAY_TRIGGER_LOW | RELAY_STARTUP_ON, -1, "RELAY 7"},
  {8, 9, RELAY_TRIGGER_LOW, -1, "RELAY 8"}
};

// Buttons config
// Row params: button pin - pin used for button, can be expander pin (but NOT RECOMMENDED) via "E(x, y)" macro
//             button type - [MONO_STABLE|BI_STABLE|DING_DONG|REED_SWITCH]
//             click action relay ID - MUST be defined in gRelayConfig
//             long-press action relay ID - ignored for BI_STABLE, DING_DONG, REED_SWITCH
//             double-click action relay ID - ignored for DING_DONG, REED_SWITCH
//             button description - debug only, max. 30 chars, can be empty ("")
const ButtonConfigDef gButtonConfig[] PROGMEM = {
  {A0,  MONO_STABLE, 1,  -1, -1, "BUTTON 1"},
  {A1,  MONO_STABLE, 2,   6, -1, "BUTTON 2"},
  {A2,  MONO_STABLE, 3,   1,  7, "BUTTON 3"},
  {A3,  BI_STABLE,   4,  -1, -1, "BUTTON 4"},
  {A4,  BI_STABLE,   5,  -1,  2, "BUTTON 5"},
  {A5,  REED_SWITCH, 8,  -1, -1, "BUTTON 6"}
};


// WIFI SSID and password
#define MY_WIFI_SSID "<YOUR WIFI NAME>"
#define MY_WIFI_PASSWORD "<YOUR WIFI PASSWORD>"

// Hostname for the WiFi Client. This is the hostname passed to the DHCP server if not static.
#define MY_HOSTNAME "ESP8266_MULTI_RELAY"

// Enable MY_IP_ADDRESS here if you want a static ip address (no DHCP)
//#define MY_IP_ADDRESS 192,168,178,87

// If using static ip you can define Gateway and Subnet address as well
//#define MY_IP_GATEWAY_ADDRESS 192,168,178,1
//#define MY_IP_SUBNET_ADDRESS 255,255,255,0


// Node's subscribe and publish topic prefix
#define MY_MQTT_PUBLISH_TOPIC_PREFIX "multi-relay-test/out"
#define MY_MQTT_SUBSCRIBE_TOPIC_PREFIX "multi-relay-test/in"

// MQTT client id
#define MY_MQTT_CLIENT_ID "multi-relay-2"

// Enable these if your MQTT broker requires username/password
#define MY_MQTT_USER "<YOUR MQTT USERNAME>"
#define MY_MQTT_PASSWORD "<YOUR MQTT PASSWORD>"

// MQTT broker ip address
#define MY_CONTROLLER_IP_ADDRESS 192,168,X,X

// MQTT broker if using URL instead of ip address
// #define MY_CONTROLLER_URL_ADDRESS "test.mosquitto.org"

// MQTT broker port
#define MY_PORT 1883

// MAC address can be anything you want but should be unique on your network
//#define MY_MAC_ADDRESS 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED
