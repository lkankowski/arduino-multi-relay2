# This is a basic workflow to help you get started with Actions

name: Build & Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      
      - name: Set up Python
        uses: actions/setup-python@v2
      
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      
      - name: Configure Multi-Relay
        run: cp include/config.h.sample include/config.h
      
      - name: PlatformIO - run build all env
        run: pio run `grep -E '^\[env:' platformio.ini | sed -E 's/^\[env:(.*)\]/-e \1/' | paste -sd ' ' -`
        
      - name: PlatformIO - run build with DEBUG_*
        run: pio run -e mega2560-serial
        env:
          PLATFORMIO_BUILD_FLAGS: -D DEBUG_COMMUNICATION -D DEBUG_ACTION -D DEBUG_STARTUP -D IGNORE_BUTTONS_START_MS=2000
      
      - name: PlatformIO - run test
        run: pio test -e native
